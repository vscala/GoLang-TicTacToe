/*
	TicTacToe GoLang Project
	
*/
package main

import "fmt"

// Constants
const XTOKEN rune = 'X'
const OTOKEN rune = 'O'

// Game variables
var running bool = true
var turn bool = true
var aiTurn bool = false
var board = [3][3]rune{{' ', ' ', ' '}, {' ', ' ', ' '}, {' ', ' ', ' '}}
var moveCount int = 0

// Print current board state
func printBoard() {
	
}

// Returns a list of valid moves
func getValidMoves() [][]int {
	out := make([][]int, 9)
	return out
}

// Returns a move generated by the computer
func getAIMove() (int, int) {
	
	return 0, 0
}

// Read user input from command line
func getMove() (int, int) {
	
	return 0, 0
}

// Play move on board, and increment moveCount
func playMove(i int, j int) {
	if turn {
		board[i][j] = XTOKEN
	} else {
		board[i][j] = OTOKEN
	}
	moveCount++
}

// Determine if current board state is won
func checkWin() bool {

	return false
}

// Determine if current board state is drawn
func checkDraw() bool {
	return moveCount == 9
}

/*
	Runner:
		print board
		Each turn:
		1a. get move from user input
		1b. generate AI move
		2. play move on board
		3. print new board
		4. determine if game is won
		5. determine if game is drawn
		6. swap turn
	
*/
func runner() {
	var i int
	var j int
	printBoard()
	for running {
		if turn == aiTurn {
			i, j = getAIMove()
		} else {
			i, j = getMove()
		}
		playMove(i, j)
		printBoard()
		if checkWin() {
			running = false
			fmt.Println("Game won")
		}
		if checkDraw() {
			running = false
			fmt.Println("Game drawn")
		}
		turn = !turn
	}
}


func main() {
	runner()
}
